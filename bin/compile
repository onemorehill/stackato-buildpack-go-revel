#!/bin/bash
# usage: bin/compile <build-dir> <cache-dir>

set -eo pipefail

mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
ver=${GOVERSION:-1.2.1}
file=${GOFILE:-go$ver.$(uname|tr A-Z a-z)-amd64.tar.gz}
url=${GOURL:-http://go.googlecode.com/files/$file}
buildpack=$(dirname $(dirname $0))
arch=$(uname -m|tr A-Z a-z)
if test $arch = x86_64
then arch=amd64
fi
plat=$(uname|tr A-Z a-z)-$arch

# Python
venv=$cache/venv
mkdir -p $cache/pip
python=python2.7
PATH=$buildpack/$plat/bin:$venv/bin:$PATH

# For debug purpose on stackato !!!!REMOVE ME LATER
echo >&2 " ****** The values given are $1 and $2"

virtualenv() {
    python "$buildpack/vendor/virtualenv-1.7/virtualenv.py" "$@"
}

if test -f $build/Godeps
then name=$(<$build/Godeps jq -r .ImportPath)
elif test -f $build/.godir
then name=$(cat $build/.godir)
else
    echo >&2 " !     A .godir is required. For instructions:"
    echo >&2 " !     http://mmcgrana.github.io/2012/09/getting-started-with-go-on-heroku"
    exit 1
fi

if test -e $build/bin && ! test -d $build/bin
then
    echo >&2 " !     File bin exists and is not a directory."
    exit 1
fi

if test -d $cache/go-$ver/go
then
    echo "-----> Using Go $ver"
else
    rm -rf $cache/* # be sure not to build up cruft
    mkdir -p $cache/go-$ver
    cd $cache/go-$ver
    echo -n "-----> Installing Go $ver..."
    curl -sO $url
    tar zxf $file
    rm -f $file
    echo " done"
fi

cp -R $cache/go-$ver/go $build/goroot

GOROOT=$build/goroot export GOROOT
GOPATH=$build/go export GOPATH
PATH=$GOPATH/bin:$GOROOT/bin:$PATH

echo >&2 "============ This is the GOPATH: $GOPATH and this is the GOROOT: $GOROOT"
echo >&2 "============ The build is: " $build


if ! (which hg > /dev/null && which bzr > /dev/null)
then
    echo -n "       Installing Virtualenv..."
    virtualenv --python $python --distribute --never-download --prompt='(venv) ' $venv > /dev/null 2>&1
    . $venv/bin/activate > /dev/null 2>&1
    echo " done"

    echo -n "       Installing Mercurial..."
    pip install mercurial > /dev/null 2>&1
    echo " done"

    echo -n "       Installing Bazaar..."
    pip install bzr > /dev/null 2>&1
    echo " done"
fi

p=$GOPATH/src/$name
mkdir -p $p
cp -R $build/* $p

echo >&2 "************** This is the name: $name and p: $p"

unset GIT_DIR # unset git dir or it will mess with goinstall
cd $p
if test -f $build/Godeps
then
    echo "-----> Running: godep go get -tags heroku ./..."
    echo >&2 `godep go get -tags heroku ./...`
else
    echo "-----> Running: go get -tags heroku ./..."
    go get -tags heroku ./...
fi

mkdir -p $build/bin
if test -d $GOPATH/bin 
then
    mv $GOPATH/bin/* $build/bin
fi

rm -rf $build/.heroku

mkdir -p $build/.profile.d
echo 'PATH=$PATH:$HOME/bin' > $build/.profile.d/go.sh

go get github.com/revel/cmd/revel

# Update GOPATH and GOROOT to reflect change when moved to DEA
GOPATH=/app/app/.go export GOPATH
GOROOT=/app/app/.goroot export GOROOT

echo >&2 "++++++++++++++++++ This is the end and this is PATH: $PATH"
echo >&2 "++++++++++++++++++ And now we are here: " `pwd`
echo >&2 "++++++++++++++++++ And the contents of the pwd dir is: " `ls`
echo >&2 "++++++++++++++++++ The contents of the GOROOT dir is: " `ls $GOROOT/`
echo >&2 "++++++++++++++++++ This is the top level: " `ls /`
echo >&2 "++++++++++++++++++ This is the next level: " `ls /staging/`
